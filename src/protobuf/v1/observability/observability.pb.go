// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.15.8
// source: v1/observability/observability.proto

package observability

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Label        string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Namespace    string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	RevDNSLookup bool   `protobuf:"varint,4,opt,name=revDNSLookup,proto3" json:"revDNSLookup,omitempty"`
	Aggregation  bool   `protobuf:"varint,5,opt,name=aggregation,proto3" json:"aggregation,omitempty"`
}

func (x *LogsRequest) Reset() {
	*x = LogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_observability_observability_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsRequest) ProtoMessage() {}

func (x *LogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_observability_observability_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsRequest.ProtoReflect.Descriptor instead.
func (*LogsRequest) Descriptor() ([]byte, []int) {
	return file_v1_observability_observability_proto_rawDescGZIP(), []int{0}
}

func (x *LogsRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LogsRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *LogsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *LogsRequest) GetRevDNSLookup() bool {
	if x != nil {
		return x.RevDNSLookup
	}
	return false
}

func (x *LogsRequest) GetAggregation() bool {
	if x != nil {
		return x.Aggregation
	}
	return false
}

type LogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PodDetail     string               `protobuf:"bytes,1,opt,name=podDetail,proto3" json:"podDetail,omitempty"`
	Namespace     string               `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ListOfProcess []*ListOfSource      `protobuf:"bytes,3,rep,name=listOfProcess,proto3" json:"listOfProcess,omitempty"`
	ListOfFile    []*ListOfSource      `protobuf:"bytes,4,rep,name=listOfFile,proto3" json:"listOfFile,omitempty"`
	ListOfNetwork []*ListOfSource      `protobuf:"bytes,5,rep,name=listOfNetwork,proto3" json:"listOfNetwork,omitempty"`
	Ingress       []*ListOfConnection  `protobuf:"bytes,6,rep,name=ingress,proto3" json:"ingress,omitempty"`
	Egress        []*ListOfConnection  `protobuf:"bytes,7,rep,name=egress,proto3" json:"egress,omitempty"`
	InServerConn  []*ServerConnections `protobuf:"bytes,8,rep,name=inServerConn,proto3" json:"inServerConn,omitempty"`
	OutServerConn []*ServerConnections `protobuf:"bytes,9,rep,name=outServerConn,proto3" json:"outServerConn,omitempty"`
}

func (x *LogsResponse) Reset() {
	*x = LogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_observability_observability_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsResponse) ProtoMessage() {}

func (x *LogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_observability_observability_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsResponse.ProtoReflect.Descriptor instead.
func (*LogsResponse) Descriptor() ([]byte, []int) {
	return file_v1_observability_observability_proto_rawDescGZIP(), []int{1}
}

func (x *LogsResponse) GetPodDetail() string {
	if x != nil {
		return x.PodDetail
	}
	return ""
}

func (x *LogsResponse) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *LogsResponse) GetListOfProcess() []*ListOfSource {
	if x != nil {
		return x.ListOfProcess
	}
	return nil
}

func (x *LogsResponse) GetListOfFile() []*ListOfSource {
	if x != nil {
		return x.ListOfFile
	}
	return nil
}

func (x *LogsResponse) GetListOfNetwork() []*ListOfSource {
	if x != nil {
		return x.ListOfNetwork
	}
	return nil
}

func (x *LogsResponse) GetIngress() []*ListOfConnection {
	if x != nil {
		return x.Ingress
	}
	return nil
}

func (x *LogsResponse) GetEgress() []*ListOfConnection {
	if x != nil {
		return x.Egress
	}
	return nil
}

func (x *LogsResponse) GetInServerConn() []*ServerConnections {
	if x != nil {
		return x.InServerConn
	}
	return nil
}

func (x *LogsResponse) GetOutServerConn() []*ServerConnections {
	if x != nil {
		return x.OutServerConn
	}
	return nil
}

type ListOfSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source            string               `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	ListOfDestination []*ListOfDestination `protobuf:"bytes,2,rep,name=listOfDestination,proto3" json:"listOfDestination,omitempty"`
}

func (x *ListOfSource) Reset() {
	*x = ListOfSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_observability_observability_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOfSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfSource) ProtoMessage() {}

func (x *ListOfSource) ProtoReflect() protoreflect.Message {
	mi := &file_v1_observability_observability_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfSource.ProtoReflect.Descriptor instead.
func (*ListOfSource) Descriptor() ([]byte, []int) {
	return file_v1_observability_observability_proto_rawDescGZIP(), []int{2}
}

func (x *ListOfSource) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *ListOfSource) GetListOfDestination() []*ListOfDestination {
	if x != nil {
		return x.ListOfDestination
	}
	return nil
}

type ListOfConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestinationLabels    string `protobuf:"bytes,1,opt,name=destinationLabels,proto3" json:"destinationLabels,omitempty"`
	DestinationNamespace string `protobuf:"bytes,2,opt,name=destinationNamespace,proto3" json:"destinationNamespace,omitempty"`
	Protocol             string `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Port                 uint32 `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	Count                int32  `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	Status               string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	LastUpdatedTime      int64  `protobuf:"varint,7,opt,name=lastUpdatedTime,proto3" json:"lastUpdatedTime,omitempty"`
}

func (x *ListOfConnection) Reset() {
	*x = ListOfConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_observability_observability_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOfConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfConnection) ProtoMessage() {}

func (x *ListOfConnection) ProtoReflect() protoreflect.Message {
	mi := &file_v1_observability_observability_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfConnection.ProtoReflect.Descriptor instead.
func (*ListOfConnection) Descriptor() ([]byte, []int) {
	return file_v1_observability_observability_proto_rawDescGZIP(), []int{3}
}

func (x *ListOfConnection) GetDestinationLabels() string {
	if x != nil {
		return x.DestinationLabels
	}
	return ""
}

func (x *ListOfConnection) GetDestinationNamespace() string {
	if x != nil {
		return x.DestinationNamespace
	}
	return ""
}

func (x *ListOfConnection) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ListOfConnection) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ListOfConnection) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListOfConnection) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListOfConnection) GetLastUpdatedTime() int64 {
	if x != nil {
		return x.LastUpdatedTime
	}
	return 0
}

type ListOfDestination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Destination     string `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	Count           int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Status          string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	LastUpdatedTime int64  `protobuf:"varint,4,opt,name=lastUpdatedTime,proto3" json:"lastUpdatedTime,omitempty"`
}

func (x *ListOfDestination) Reset() {
	*x = ListOfDestination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_observability_observability_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOfDestination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOfDestination) ProtoMessage() {}

func (x *ListOfDestination) ProtoReflect() protoreflect.Message {
	mi := &file_v1_observability_observability_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOfDestination.ProtoReflect.Descriptor instead.
func (*ListOfDestination) Descriptor() ([]byte, []int) {
	return file_v1_observability_observability_proto_rawDescGZIP(), []int{4}
}

func (x *ListOfDestination) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *ListOfDestination) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListOfDestination) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListOfDestination) GetLastUpdatedTime() int64 {
	if x != nil {
		return x.LastUpdatedTime
	}
	return 0
}

type ServerConnections struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol   string `protobuf:"bytes,1,opt,name=Protocol,proto3" json:"Protocol,omitempty"`
	PodSvcIP   string `protobuf:"bytes,2,opt,name=PodSvcIP,proto3" json:"PodSvcIP,omitempty"`
	ServerPort string `protobuf:"bytes,3,opt,name=ServerPort,proto3" json:"ServerPort,omitempty"`
	Labels     string `protobuf:"bytes,4,opt,name=Labels,proto3" json:"Labels,omitempty"`
	Namespace  string `protobuf:"bytes,5,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	Command    string `protobuf:"bytes,6,opt,name=Command,proto3" json:"Command,omitempty"`
}

func (x *ServerConnections) Reset() {
	*x = ServerConnections{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_observability_observability_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerConnections) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerConnections) ProtoMessage() {}

func (x *ServerConnections) ProtoReflect() protoreflect.Message {
	mi := &file_v1_observability_observability_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerConnections.ProtoReflect.Descriptor instead.
func (*ServerConnections) Descriptor() ([]byte, []int) {
	return file_v1_observability_observability_proto_rawDescGZIP(), []int{5}
}

func (x *ServerConnections) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ServerConnections) GetPodSvcIP() string {
	if x != nil {
		return x.PodSvcIP
	}
	return ""
}

func (x *ServerConnections) GetServerPort() string {
	if x != nil {
		return x.ServerPort
	}
	return ""
}

func (x *ServerConnections) GetLabels() string {
	if x != nil {
		return x.Labels
	}
	return ""
}

func (x *ServerConnections) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ServerConnections) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

var File_v1_observability_observability_proto protoreflect.FileDescriptor

var file_v1_observability_observability_proto_rawDesc = []byte{
	0x0a, 0x24, 0x76, 0x31, 0x2f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x2f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x76, 0x31, 0x2e, 0x6f, 0x62, 0x73, 0x65, 0x72,
	0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x9b, 0x01, 0x0a, 0x0b, 0x4c, 0x6f, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x76, 0x44, 0x4e, 0x53, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x72, 0x65, 0x76, 0x44, 0x4e, 0x53, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa4, 0x04, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x64, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x6f, 0x64, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x76, 0x31, 0x2e,
	0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x66, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0d, 0x6c, 0x69, 0x73, 0x74,
	0x4f, 0x66, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x3e, 0x0a, 0x0a, 0x6c, 0x69, 0x73,
	0x74, 0x4f, 0x66, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x76, 0x31, 0x2e, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0a, 0x6c,
	0x69, 0x73, 0x74, 0x4f, 0x66, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x6c, 0x69, 0x73,
	0x74, 0x4f, 0x66, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x76, 0x31, 0x2e, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12,
	0x3c, 0x0a, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3a, 0x0a,
	0x06, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x76, 0x31, 0x2e, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x47, 0x0a, 0x0c, 0x69, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x76, 0x31, 0x2e, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0c, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x6e, 0x12, 0x49, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x76, 0x31, 0x2e, 0x6f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0d,
	0x6f, 0x75, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x22, 0x79, 0x0a,
	0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x11, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x76, 0x31, 0x2e, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x66, 0x44, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xfc, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x66, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a,
	0x11, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a,
	0x0f, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x66, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a,
	0x0f, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x64,
	0x53, 0x76, 0x63, 0x49, 0x50, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6f, 0x64,
	0x53, 0x76, 0x63, 0x49, 0x50, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50,
	0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x32, 0x57, 0x0a, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x4c, 0x0a, 0x09, 0x46, 0x65, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x1d, 0x2e,
	0x76, 0x31, 0x2e, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x76,
	0x31, 0x2e, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e,
	0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0x49,
	0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x63, 0x63,
	0x75, 0x6b, 0x6e, 0x6f, 0x78, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x2d, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x73, 0x72, 0x63, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_v1_observability_observability_proto_rawDescOnce sync.Once
	file_v1_observability_observability_proto_rawDescData = file_v1_observability_observability_proto_rawDesc
)

func file_v1_observability_observability_proto_rawDescGZIP() []byte {
	file_v1_observability_observability_proto_rawDescOnce.Do(func() {
		file_v1_observability_observability_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_observability_observability_proto_rawDescData)
	})
	return file_v1_observability_observability_proto_rawDescData
}

var file_v1_observability_observability_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_v1_observability_observability_proto_goTypes = []interface{}{
	(*LogsRequest)(nil),       // 0: v1.observability.LogsRequest
	(*LogsResponse)(nil),      // 1: v1.observability.LogsResponse
	(*ListOfSource)(nil),      // 2: v1.observability.ListOfSource
	(*ListOfConnection)(nil),  // 3: v1.observability.ListOfConnection
	(*ListOfDestination)(nil), // 4: v1.observability.ListOfDestination
	(*ServerConnections)(nil), // 5: v1.observability.ServerConnections
}
var file_v1_observability_observability_proto_depIdxs = []int32{
	2, // 0: v1.observability.LogsResponse.listOfProcess:type_name -> v1.observability.ListOfSource
	2, // 1: v1.observability.LogsResponse.listOfFile:type_name -> v1.observability.ListOfSource
	2, // 2: v1.observability.LogsResponse.listOfNetwork:type_name -> v1.observability.ListOfSource
	3, // 3: v1.observability.LogsResponse.ingress:type_name -> v1.observability.ListOfConnection
	3, // 4: v1.observability.LogsResponse.egress:type_name -> v1.observability.ListOfConnection
	5, // 5: v1.observability.LogsResponse.inServerConn:type_name -> v1.observability.ServerConnections
	5, // 6: v1.observability.LogsResponse.outServerConn:type_name -> v1.observability.ServerConnections
	4, // 7: v1.observability.ListOfSource.listOfDestination:type_name -> v1.observability.ListOfDestination
	0, // 8: v1.observability.Summary.FetchLogs:input_type -> v1.observability.LogsRequest
	1, // 9: v1.observability.Summary.FetchLogs:output_type -> v1.observability.LogsResponse
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_v1_observability_observability_proto_init() }
func file_v1_observability_observability_proto_init() {
	if File_v1_observability_observability_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_observability_observability_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_observability_observability_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_observability_observability_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOfSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_observability_observability_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOfConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_observability_observability_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOfDestination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_observability_observability_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerConnections); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_observability_observability_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_observability_observability_proto_goTypes,
		DependencyIndexes: file_v1_observability_observability_proto_depIdxs,
		MessageInfos:      file_v1_observability_observability_proto_msgTypes,
	}.Build()
	File_v1_observability_observability_proto = out.File
	file_v1_observability_observability_proto_rawDesc = nil
	file_v1_observability_observability_proto_goTypes = nil
	file_v1_observability_observability_proto_depIdxs = nil
}
